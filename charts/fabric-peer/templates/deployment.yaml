apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.peer.name }}
  namespace: {{ .Values.peer.org }}
  labels:
    app.kubernetes.io/name: fabric-peer
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fabric-peer
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fabric-peer
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
      volumes:
      - name: fabric-cfg
        emptyDir: {}
      - name: peer-config
        configMap:
          name: {{ .Values.peer.name }}-config
      - name: ccaas-scripts
        configMap:
          name: {{ .Values.peer.name }}-ccaas-scripts
          defaultMode: 0755
      - name: peer-core
        configMap:
          name: {{ .Values.peer.name }}-core
      - name: msp-cacerts
        secret:
          secretName: {{ .Values.peer.name }}-keypair
          defaultMode: 420
          items:
          - key: ca.crt
            path: cacert.pem
      - name: msp-keystore
        secret:
          secretName: {{ .Values.peer.name }}-keypair
          defaultMode: 420
          items:
          - key: tls.key
            path: key.pem
      - name: msp-signcerts
        secret:
          secretName: {{ .Values.peer.name }}-keypair
          defaultMode: 420
          items:
          - key: tls.crt
            path: cert.pem
      - name: msp-tlscacerts
        secret:
          secretName: {{ .Values.peer.name }}-keypair-tls
          defaultMode: 420
          items:
          - key: ca.crt
            path: tlscacert.pem
      - name: {{ .Values.peer.name }}-keypair-tls
        secret:
          secretName: {{ .Values.peer.name }}-keypair-tls
          defaultMode: 420
      - name: orderer-tlsca-cert
        secret:
          secretName: tlsca.orderer-certs
          defaultMode: 420
          items:
          - key: ca.crt
            path: ca.crt
      - name: {{ .Values.peer.name }}-data
        {{- if eq .Values.pvc.enabled true }}
        persistentVolumeClaim:
          claimName: {{ .Values.peer.name }}-data
        {{- else }}
        emptyDir: {}
        {{- end }}
      # - name: {{ .Values.peer.name }}-couchdb-data
      #   persistentVolumeClaim:
      #     claimName: {{ .Values.peer.name }}-couchdb-data
      - hostPath:
          path: /run/docker.sock
          type: ""
        name: dockersocket
      containers:
      - env:
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-couchdb
              key: adminPassword
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-couchdb
              key: adminUsername
        envFrom:
        - configMapRef:
            name: {{ .Values.peer.name }}-env-vars
        image: {{ .Values.image.repository | default "docker.io/hyperledger/fabric-peer" }}:{{ .Values.image.tag | default "latest" }}
        imagePullPolicy: IfNotPresent
        name: fabric-peer
        command: ["/usr/local/bin/peer", "node", "start"]
        resources: {}
        volumeMounts:
        - mountPath: /run/docker.sock
          name: dockersocket
        - mountPath: /opt/hyperledger/ccaas_builder/bin
          name: ccaas-scripts
        - mountPath: /fabric/peer
          name: fabric-cfg
        - mountPath: /fabric/peer/core.yaml
          name: peer-core
          subPath: core.yaml
        - mountPath: /fabric/peer/msp/config.yaml
          name: peer-config
          subPath: config.yaml
        - mountPath: /fabric/peer/msp/cacerts/cacert.pem
          name: msp-cacerts
          subPath: cacert.pem
        - mountPath: /fabric/peer/msp/tlscacerts/tlscacert.pem
          name: msp-tlscacerts
          subPath: tlscacert.pem
        - mountPath: /fabric/peer/msp/keystore/key.pem
          name: msp-keystore
          subPath: key.pem
        - mountPath: /fabric/peer/msp/signcerts/cert.pem
          name: msp-signcerts
          subPath: cert.pem
        - mountPath: /fabric/peer/tls
          name: {{ .Values.peer.name }}-keypair-tls
        - mountPath: /fabric/orderer/tls/ca.crt
          name: orderer-tlsca-cert
          subPath: ca.crt
        - mountPath: /var/hyperledger/production
          name: {{ .Values.peer.name }}-data
        workingDir: /fabric
      # couchdb is deplyed as a subchart https://github.com/apache/couchdb-helm
      # - env:
      #   - name: COUCHDB_USER
      #     value: couchdb
      #   - name: COUCHDB_PASSWORD
      #     value: couchdb
      #   image: hyperledger/fabric-couchdb
      #   imagePullPolicy: Always
      #   name: couchdb
      #   ports:
      #   - containerPort: 5984
      #     protocol: TCP
      #   volumeMounts:
      #   - mountPath: /opt/couchdb/data
      #     name: {{ .Values.peer.name }}-couchdb-data
---

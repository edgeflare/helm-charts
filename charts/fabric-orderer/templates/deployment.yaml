apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.orderer.name }}
  namespace: orderer
  labels:
    app.kubernetes.io/name: fabric-orderer
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fabric-orderer
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fabric-orderer
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
      volumes:
      - name: orderer-data
        {{- if eq .Values.pvc.enabled true }}
        persistentVolumeClaim:
          claimName: {{ .Values.orderer.name }}-data
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: fabric-cfg
        emptyDir: {}
      - name: orderer-config
        configMap:
          name: {{ .Values.orderer.name }}-config
      # - name: admin-cert
      #   secret:
      #     secretName: admin-keypair
      #     defaultMode: 420
      #     items:
      #     - key: tls.crt
      #       path: admincert.pem
      - name: msp-tlscacerts
        secret:
          secretName: {{ .Values.orderer.name }}-keypair-tls
          defaultMode: 420
          items:
          - key: ca.crt
            path: tlscacert.pem
      - name: msp-keystore
        secret:
          secretName: {{ .Values.orderer.name }}-keypair
          defaultMode: 420
          items:
          - key: tls.key
            path: key.pem
      - name: msp-signcerts
        secret:
          secretName: {{ .Values.orderer.name }}-keypair
          defaultMode: 420
          items:
          - key: tls.crt
            path: cert.pem
      - name: msp-cacerts
        secret:
          secretName: {{ .Values.orderer.name }}-keypair
          defaultMode: 420
          items:
          - key: ca.crt
            path: cacert.pem
      - name: orderer-keypair-tls
        secret:
          secretName: {{ .Values.orderer.name }}-keypair-tls
          defaultMode: 420
      containers:
      - image: {{ .Values.image.repository | default "docker.io/hyperledger/fabric-orderer" }}:{{ .Values.image.tag | default "latest" }}
        name: fabric-orderer
        envFrom:
        - configMapRef:
            name: {{ .Values.orderer.name }}-env-vars
        command:
        - /bin/bash
        - -c
        - |
          orderer
        volumeMounts:
        - mountPath: /var/hyperledger/production/orderer
          name: orderer-data
        - mountPath: /fabric/orderer
          name: fabric-cfg
        - mountPath: /fabric/orderer/msp/config.yaml
          name: orderer-config
          subPath: config.yaml
        # - mountPath: /fabric/orderer/msp/admincerts/admincert.pem
        #   name: admin-cert
        #   subPath: admincert.pem
        - mountPath: /fabric/orderer/msp/tlscacerts/tlscacert.pem
          name: msp-tlscacerts
          subPath: tlscacert.pem
        - mountPath: /fabric/orderer/msp/keystore/key.pem
          name: msp-keystore
          subPath: key.pem
        - mountPath: /fabric/orderer/msp/signcerts/cert.pem
          name: msp-signcerts
          subPath: cert.pem
        - mountPath: /fabric/orderer/msp/cacerts/cacert.pem
          name: msp-cacerts
          subPath: cacert.pem
        - mountPath: /fabric/orderer/tls
          name: orderer-keypair-tls
        workingDir: /fabric
---
